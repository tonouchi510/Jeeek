// Code generated by goa v3.0.7, DO NOT EDIT.
//
// Activity service
//
// Command:
// $ goa gen github.com/tonouchi510/Jeeek/design

package activity

import (
	"context"

	"goa.design/goa/v3/security"
)

// フォロワーへのアクティビティ投稿の反映API
type Service interface {
	// 手動投稿用のAPI
	ManualActivityPost(context.Context, *ActivityPostPayload) (err error)
	// タイムラインへの書き込みを行う
	ReflectionActivity(context.Context, *ActivityWriterPayload) (err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "Activity"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"Manual activity post", "Reflection activity"}

// ActivityPostPayload is the payload type of the Activity service Manual
// activity post method.
type ActivityPostPayload struct {
	// JWT used for authentication
	Token    *string
	Activity *Activity
}

// ActivityWriterPayload is the payload type of the Activity service Reflection
// activity method.
type ActivityWriterPayload struct {
	// JWT used for authentication
	Token      *string
	Attributes []*ActivityWriterAttributes
	Data       []byte
}

type Activity struct {
	ID        string
	UserTiny  *UserTiny
	Category  int
	Rank      int
	Content   *Content
	Tags      []string
	Favorites []string
	Gifts     []string
}

type UserTiny struct {
	UID      string
	Name     string
	PhotoURL *string
}

type Content struct {
	Subject string
	URL     *string
	Comment *string
}

type ActivityWriterAttributes struct {
	UID *string
}

// Credentials are invalid
type Unauthorized string

// Error returns an error description.
func (e Unauthorized) Error() string {
	return "Credentials are invalid"
}

// ErrorName returns "unauthorized".
func (e Unauthorized) ErrorName() string {
	return "unauthorized"
}
