// Code generated by goa v3.0.4, DO NOT EDIT.
//
// Admin views
//
// Command:
// $ goa gen github.com/tonouchi510/Jeeek/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// JeeekHealthcheck is the viewed result type that is projected based on a view.
type JeeekHealthcheck struct {
	// Type to project
	Projected *JeeekHealthcheckView
	// View to render
	View string
}

// JeeekAdminSignin is the viewed result type that is projected based on a view.
type JeeekAdminSignin struct {
	// Type to project
	Projected *JeeekAdminSigninView
	// View to render
	View string
}

// JeeekHealthcheckView is a type that runs validations on a projected type.
type JeeekHealthcheckView struct {
	Result *string
}

// JeeekAdminSigninView is a type that runs validations on a projected type.
type JeeekAdminSigninView struct {
	// JWT used for authentication
	Token *string
}

var (
	// JeeekHealthcheckMap is a map of attribute names in result type
	// JeeekHealthcheck indexed by view name.
	JeeekHealthcheckMap = map[string][]string{
		"default": []string{
			"result",
		},
	}
	// JeeekAdminSigninMap is a map of attribute names in result type
	// JeeekAdminSignin indexed by view name.
	JeeekAdminSigninMap = map[string][]string{
		"default": []string{
			"token",
		},
	}
)

// ValidateJeeekHealthcheck runs the validations defined on the viewed result
// type JeeekHealthcheck.
func ValidateJeeekHealthcheck(result *JeeekHealthcheck) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateJeeekHealthcheckView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateJeeekAdminSignin runs the validations defined on the viewed result
// type JeeekAdminSignin.
func ValidateJeeekAdminSignin(result *JeeekAdminSignin) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateJeeekAdminSigninView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateJeeekHealthcheckView runs the validations defined on
// JeeekHealthcheckView using the "default" view.
func ValidateJeeekHealthcheckView(result *JeeekHealthcheckView) (err error) {
	if result.Result == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("result", "result"))
	}
	return
}

// ValidateJeeekAdminSigninView runs the validations defined on
// JeeekAdminSigninView using the "default" view.
func ValidateJeeekAdminSigninView(result *JeeekAdminSigninView) (err error) {
	if result.Token == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("token", "result"))
	}
	return
}
