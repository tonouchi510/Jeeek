// Code generated by goa v3.0.4, DO NOT EDIT.
//
// Admin client
//
// Command:
// $ goa gen github.com/tonouchi510/Jeeek/design

package admin

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Admin" service client.
type Client struct {
	AdminHealthCheckEndpoint goa.Endpoint
	AdminSigninEndpoint      goa.Endpoint
}

// NewClient initializes a "Admin" service client given the endpoints.
func NewClient(adminHealthCheck, adminSignin goa.Endpoint) *Client {
	return &Client{
		AdminHealthCheckEndpoint: adminHealthCheck,
		AdminSigninEndpoint:      adminSignin,
	}
}

// AdminHealthCheck calls the "admin health-check" endpoint of the "Admin"
// service.
func (c *Client) AdminHealthCheck(ctx context.Context, p *SessionTokenPayload) (res *JeeekHealthcheck, err error) {
	var ires interface{}
	ires, err = c.AdminHealthCheckEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*JeeekHealthcheck), nil
}

// AdminSignin calls the "admin signin" endpoint of the "Admin" service.
func (c *Client) AdminSignin(ctx context.Context, p *AdminSignInPayload) (res *JeeekAdminSignin, err error) {
	var ires interface{}
	ires, err = c.AdminSigninEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*JeeekAdminSignin), nil
}
