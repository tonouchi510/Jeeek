// Code generated by goa v3.0.7, DO NOT EDIT.
//
// Activity HTTP client CLI support package
//
// Command:
// $ goa gen github.com/tonouchi510/Jeeek/design

package client

import (
	"encoding/json"
	"fmt"

	activity "github.com/tonouchi510/Jeeek/gen/activity"
)

// BuildFetchQiitaArticleByQiitaUserIDPayload builds the payload for the
// Activity Fetch qiita article by qiita-user-id endpoint from CLI flags.
func BuildFetchQiitaArticleByQiitaUserIDPayload(activityFetchQiitaArticleByQiitaUserIDUserID string, activityFetchQiitaArticleByQiitaUserIDToken string) (*activity.GetActivityPayload, error) {
	var userID string
	{
		userID = activityFetchQiitaArticleByQiitaUserIDUserID
	}
	var token *string
	{
		if activityFetchQiitaArticleByQiitaUserIDToken != "" {
			token = &activityFetchQiitaArticleByQiitaUserIDToken
		}
	}
	payload := &activity.GetActivityPayload{
		UserID: userID,
		Token:  token,
	}
	return payload, nil
}

// BuildPickOutPastActivityOfQiitaPayload builds the payload for the Activity
// Pick out past activity of qiita endpoint from CLI flags.
func BuildPickOutPastActivityOfQiitaPayload(activityPickOutPastActivityOfQiitaBody string, activityPickOutPastActivityOfQiitaToken string) (*activity.GetActivityPayload, error) {
	var err error
	var body PickOutPastActivityOfQiitaRequestBody
	{
		err = json.Unmarshal([]byte(activityPickOutPastActivityOfQiitaBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"user_id\": \"Dolor consectetur dolores.\"\n   }'")
		}
	}
	var token *string
	{
		if activityPickOutPastActivityOfQiitaToken != "" {
			token = &activityPickOutPastActivityOfQiitaToken
		}
	}
	v := &activity.GetActivityPayload{
		UserID: body.UserID,
	}
	v.Token = token
	return v, nil
}
