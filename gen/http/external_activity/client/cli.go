// Code generated by goa v3.0.7, DO NOT EDIT.
//
// ExternalActivity HTTP client CLI support package
//
// Command:
// $ goa gen github.com/tonouchi510/Jeeek/design

package client

import (
	externalactivity "github.com/tonouchi510/Jeeek/gen/external_activity"
)

// BuildRefreshActivitiesOfExternalServicesPayload builds the payload for the
// ExternalActivity Refresh activities of external services endpoint from CLI
// flags.
func BuildRefreshActivitiesOfExternalServicesPayload(externalActivityRefreshActivitiesOfExternalServicesToken string) (*externalactivity.SessionTokenPayload, error) {
	var token *string
	{
		if externalActivityRefreshActivitiesOfExternalServicesToken != "" {
			token = &externalActivityRefreshActivitiesOfExternalServicesToken
		}
	}
	payload := &externalactivity.SessionTokenPayload{
		Token: token,
	}
	return payload, nil
}

// BuildRefreshQiitaActivityPayload builds the payload for the ExternalActivity
// Refresh qiita activity endpoint from CLI flags.
func BuildRefreshQiitaActivityPayload(externalActivityRefreshQiitaActivityToken string) (*externalactivity.SessionTokenPayload, error) {
	var token *string
	{
		if externalActivityRefreshQiitaActivityToken != "" {
			token = &externalActivityRefreshQiitaActivityToken
		}
	}
	payload := &externalactivity.SessionTokenPayload{
		Token: token,
	}
	return payload, nil
}

// BuildPickOutPastActivityOfQiitaPayload builds the payload for the
// ExternalActivity Pick out past activity of qiita endpoint from CLI flags.
func BuildPickOutPastActivityOfQiitaPayload(externalActivityPickOutPastActivityOfQiitaToken string) (*externalactivity.SessionTokenPayload, error) {
	var token *string
	{
		if externalActivityPickOutPastActivityOfQiitaToken != "" {
			token = &externalActivityPickOutPastActivityOfQiitaToken
		}
	}
	payload := &externalactivity.SessionTokenPayload{
		Token: token,
	}
	return payload, nil
}
