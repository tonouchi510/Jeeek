// Code generated by goa v3.0.7, DO NOT EDIT.
//
// ExternalActivity HTTP client types
//
// Command:
// $ goa gen github.com/tonouchi510/Jeeek/design

package client

import (
	externalactivity "github.com/tonouchi510/Jeeek/gen/external_activity"
)

// RefreshActivitiesOfExternalServicesUnauthorizedResponseBody is the type of
// the "ExternalActivity" service "Refresh activities of external services"
// endpoint HTTP response body for the "unauthorized" error.
type RefreshActivitiesOfExternalServicesUnauthorizedResponseBody string

// RefreshQiitaActivityUnauthorizedResponseBody is the type of the
// "ExternalActivity" service "Refresh qiita activity" endpoint HTTP response
// body for the "unauthorized" error.
type RefreshQiitaActivityUnauthorizedResponseBody string

// PickOutPastActivityOfQiitaUnauthorizedResponseBody is the type of the
// "ExternalActivity" service "Pick out past activity of qiita" endpoint HTTP
// response body for the "unauthorized" error.
type PickOutPastActivityOfQiitaUnauthorizedResponseBody string

// NewRefreshActivitiesOfExternalServicesUnauthorized builds a ExternalActivity
// service Refresh activities of external services endpoint unauthorized error.
func NewRefreshActivitiesOfExternalServicesUnauthorized(body RefreshActivitiesOfExternalServicesUnauthorizedResponseBody) externalactivity.Unauthorized {
	v := externalactivity.Unauthorized(body)
	return v
}

// NewRefreshQiitaActivityUnauthorized builds a ExternalActivity service
// Refresh qiita activity endpoint unauthorized error.
func NewRefreshQiitaActivityUnauthorized(body RefreshQiitaActivityUnauthorizedResponseBody) externalactivity.Unauthorized {
	v := externalactivity.Unauthorized(body)
	return v
}

// NewPickOutPastActivityOfQiitaUnauthorized builds a ExternalActivity service
// Pick out past activity of qiita endpoint unauthorized error.
func NewPickOutPastActivityOfQiitaUnauthorized(body PickOutPastActivityOfQiitaUnauthorizedResponseBody) externalactivity.Unauthorized {
	v := externalactivity.Unauthorized(body)
	return v
}
