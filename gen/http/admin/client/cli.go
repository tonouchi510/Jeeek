// Code generated by goa v3.0.4, DO NOT EDIT.
//
// Admin HTTP client CLI support package
//
// Command:
// $ goa gen github.com/tonouchi510/Jeeek/design

package client

import (
	"encoding/json"
	"fmt"

	admin "github.com/tonouchi510/Jeeek/gen/admin"
)

// BuildAdminHealthCheckPayload builds the payload for the Admin admin
// health-check endpoint from CLI flags.
func BuildAdminHealthCheckPayload(adminAdminHealthCheckToken string) (*admin.SessionTokenPayload, error) {
	var token *string
	{
		if adminAdminHealthCheckToken != "" {
			token = &adminAdminHealthCheckToken
		}
	}
	payload := &admin.SessionTokenPayload{
		Token: token,
	}
	return payload, nil
}

// BuildAdminSigninPayload builds the payload for the Admin admin signin
// endpoint from CLI flags.
func BuildAdminSigninPayload(adminAdminSigninBody string) (*admin.AdminSignInPayload, error) {
	var err error
	var body AdminSigninRequestBody
	{
		err = json.Unmarshal([]byte(adminAdminSigninBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"uid\": \"4WIbqiNIpIYXqrfBMVZsbKCepau1\"\n   }'")
		}
	}
	v := &admin.AdminSignInPayload{
		UID: body.UID,
	}
	return v, nil
}
