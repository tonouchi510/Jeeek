// Code generated by goa v3.0.4, DO NOT EDIT.
//
// Admin HTTP server types
//
// Command:
// $ goa gen github.com/tonouchi510/Jeeek/design

package server

import (
	admin "github.com/tonouchi510/Jeeek/gen/admin"
	adminviews "github.com/tonouchi510/Jeeek/gen/admin/views"
	goa "goa.design/goa/v3/pkg"
)

// AdminSigninRequestBody is the type of the "Admin" service "admin signin"
// endpoint HTTP request body.
type AdminSigninRequestBody struct {
	UID *string `form:"uid,omitempty" json:"uid,omitempty" xml:"uid,omitempty"`
}

// AdminHealthCheckResponseBody is the type of the "Admin" service "admin
// health-check" endpoint HTTP response body.
type AdminHealthCheckResponseBody struct {
	Result string `form:"result" json:"result" xml:"result"`
}

// AdminSigninResponseBody is the type of the "Admin" service "admin signin"
// endpoint HTTP response body.
type AdminSigninResponseBody struct {
	// JWT used for authentication
	Token string `form:"token" json:"token" xml:"token"`
}

// AdminHealthCheckUnauthorizedResponseBody is the type of the "Admin" service
// "admin health-check" endpoint HTTP response body for the "unauthorized"
// error.
type AdminHealthCheckUnauthorizedResponseBody string

// AdminSigninUnauthorizedResponseBody is the type of the "Admin" service
// "admin signin" endpoint HTTP response body for the "unauthorized" error.
type AdminSigninUnauthorizedResponseBody string

// NewAdminHealthCheckResponseBody builds the HTTP response body from the
// result of the "admin health-check" endpoint of the "Admin" service.
func NewAdminHealthCheckResponseBody(res *adminviews.JeeekHealthcheckView) *AdminHealthCheckResponseBody {
	body := &AdminHealthCheckResponseBody{
		Result: *res.Result,
	}
	return body
}

// NewAdminSigninResponseBody builds the HTTP response body from the result of
// the "admin signin" endpoint of the "Admin" service.
func NewAdminSigninResponseBody(res *adminviews.JeeekAdminSigninView) *AdminSigninResponseBody {
	body := &AdminSigninResponseBody{
		Token: *res.Token,
	}
	return body
}

// NewAdminHealthCheckUnauthorizedResponseBody builds the HTTP response body
// from the result of the "admin health-check" endpoint of the "Admin" service.
func NewAdminHealthCheckUnauthorizedResponseBody(res admin.Unauthorized) AdminHealthCheckUnauthorizedResponseBody {
	body := AdminHealthCheckUnauthorizedResponseBody(res)
	return body
}

// NewAdminSigninUnauthorizedResponseBody builds the HTTP response body from
// the result of the "admin signin" endpoint of the "Admin" service.
func NewAdminSigninUnauthorizedResponseBody(res admin.Unauthorized) AdminSigninUnauthorizedResponseBody {
	body := AdminSigninUnauthorizedResponseBody(res)
	return body
}

// NewAdminHealthCheckSessionTokenPayload builds a Admin service admin
// health-check endpoint payload.
func NewAdminHealthCheckSessionTokenPayload(token *string) *admin.SessionTokenPayload {
	return &admin.SessionTokenPayload{
		Token: token,
	}
}

// NewAdminSigninAdminSignInPayload builds a Admin service admin signin
// endpoint payload.
func NewAdminSigninAdminSignInPayload(body *AdminSigninRequestBody) *admin.AdminSignInPayload {
	v := &admin.AdminSignInPayload{
		UID: *body.UID,
	}
	return v
}

// ValidateAdminSigninRequestBody runs the validations defined on Admin
// SigninRequestBody
func ValidateAdminSigninRequestBody(body *AdminSigninRequestBody) (err error) {
	if body.UID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("uid", "body"))
	}
	return
}
